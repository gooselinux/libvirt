From b23f94326f6d4b3a03afa28a095893d81f863ad9 Mon Sep 17 00:00:00 2001
Message-Id: <b23f94326f6d4b3a03afa28a095893d81f863ad9.1296819815.git.jdenemar@redhat.com>
From: Wen Congyang <wency@cn.fujitsu.com>
Date: Fri, 21 Jan 2011 16:28:07 +0800
Subject: [PATCH] qemu: Fix a possible deadlock in p2p migration

https://bugzilla.redhat.com/show_bug.cgi?id=673434

The function virUnrefConnect() may call virReleaseConnect() to release
the dest connection, and the function virReleaseConnect() will call
conn->driver->close().

So the function virUnrefConnect() should be surrounded by
qemuDomainObjEnterRemoteWithDriver() and
qemuDomainObjExitRemoteWithDriver() to prevent possible deadlock between
two communicating libvirt daemons.

See commit f0c8e1cb3774d6f09e2681ca1988bf235a343007 for further details.

Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>
(cherry picked from commit bda57661b8086b4d5858328afdfc28fe1b58f112)
---
 src/qemu/qemu_driver.c |    2 ++
 1 files changed, 2 insertions(+), 0 deletions(-)

diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 3f409a6..0b9614d 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -9354,7 +9354,9 @@ static int doPeer2PeerMigrate(virDomainPtr dom,
 cleanup:
     VIR_FREE(dom_xml);
     /* don't call virConnectClose(), because that resets any pending errors */
+    qemuDomainObjEnterRemoteWithDriver(driver, vm);
     virUnrefConnect(dconn);
+    qemuDomainObjExitRemoteWithDriver(driver, vm);
 
     return ret;
 }
-- 
1.7.4

