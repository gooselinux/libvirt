From 18768101699b0293bc4786fc5961d6b327857822 Mon Sep 17 00:00:00 2001
Message-Id: <18768101699b0293bc4786fc5961d6b327857822.1299776671.git.jdenemar@redhat.com>
From: Michal Privoznik <mprivozn@redhat.com>
Date: Wed, 9 Mar 2011 10:58:56 +0100
Subject: [PATCH] virsh: change vshCommandOptString return type and fix const-correctness

This function should return pointer to const, because we don't want
to change command option value. Therefore we can ensure const-correctness.
(cherry picked from commit dc3d60ecd594b33ffc6956cf2ff37f87825e7849)

Referred to:
https://bugzilla.redhat.com/show_bug.cgi?id=639587
---
 tools/virsh.c |  235 +++++++++++++++++++++++++++++----------------------------
 1 files changed, 120 insertions(+), 115 deletions(-)

diff --git a/tools/virsh.c b/tools/virsh.c
index 543a1b7..48e3cf2 100644
--- a/tools/virsh.c
+++ b/tools/virsh.c
@@ -254,8 +254,8 @@ static vshCmdOpt *vshCommandOpt(const vshCmd *cmd, const char *name);
 static int vshCommandOptInt(const vshCmd *cmd, const char *name, int *found);
 static unsigned long vshCommandOptUL(const vshCmd *cmd, const char *name,
                                      int *found);
-static char *vshCommandOptString(const vshCmd *cmd, const char *name,
-                                 int *found);
+static const char *vshCommandOptString(const vshCmd *cmd, const char *name,
+                                       int *found);
 static long long vshCommandOptLongLong(const vshCmd *cmd, const char *name,
                                        int *found);
 static int vshCommandOptBool(const vshCmd *cmd, const char *name);
@@ -267,14 +267,14 @@ static char *vshCommandOptArgv(const vshCmd *cmd, int count);
 #define VSH_BYMAC    (1 << 4)
 
 static virDomainPtr vshCommandOptDomainBy(vshControl *ctl, const vshCmd *cmd,
-                                          char **name, int flag);
+                                          const char **name, int flag);
 
 /* default is lookup by Id, Name and UUID */
 #define vshCommandOptDomain(_ctl, _cmd, _name)                      \
     vshCommandOptDomainBy(_ctl, _cmd, _name, VSH_BYID|VSH_BYUUID|VSH_BYNAME)
 
 static virNetworkPtr vshCommandOptNetworkBy(vshControl *ctl, const vshCmd *cmd,
-                                            char **name, int flag);
+                                            const char **name, int flag);
 
 /* default is lookup by Name and UUID */
 #define vshCommandOptNetwork(_ctl, _cmd, _name)                    \
@@ -282,7 +282,7 @@ static virNetworkPtr vshCommandOptNetworkBy(vshControl *ctl, const vshCmd *cmd,
                            VSH_BYUUID|VSH_BYNAME)
 
 static virNWFilterPtr vshCommandOptNWFilterBy(vshControl *ctl, const vshCmd *cmd,
-                                                  char **name, int flag);
+                                                  const char **name, int flag);
 
 /* default is lookup by Name and UUID */
 #define vshCommandOptNWFilter(_ctl, _cmd, _name)                    \
@@ -290,7 +290,7 @@ static virNWFilterPtr vshCommandOptNWFilterBy(vshControl *ctl, const vshCmd *cmd
                             VSH_BYUUID|VSH_BYNAME)
 
 static virInterfacePtr vshCommandOptInterfaceBy(vshControl *ctl, const vshCmd *cmd,
-                                                char **name, int flag);
+                                                const char **name, int flag);
 
 /* default is lookup by Name and MAC */
 #define vshCommandOptInterface(_ctl, _cmd, _name)                    \
@@ -298,7 +298,7 @@ static virInterfacePtr vshCommandOptInterfaceBy(vshControl *ctl, const vshCmd *c
                            VSH_BYMAC|VSH_BYNAME)
 
 static virStoragePoolPtr vshCommandOptPoolBy(vshControl *ctl, const vshCmd *cmd,
-                            const char *optname, char **name, int flag);
+                            const char *optname, const char **name, int flag);
 
 /* default is lookup by Name and UUID */
 #define vshCommandOptPool(_ctl, _cmd, _optname, _name)           \
@@ -308,7 +308,7 @@ static virStoragePoolPtr vshCommandOptPoolBy(vshControl *ctl, const vshCmd *cmd,
 static virStorageVolPtr vshCommandOptVolBy(vshControl *ctl, const vshCmd *cmd,
                                            const char *optname,
                                            const char *pooloptname,
-                                           char **name, int flag);
+                                           const char **name, int flag);
 
 /* default is lookup by Name and UUID */
 #define vshCommandOptVol(_ctl, _cmd, _optname, _pooloptname, _name)   \
@@ -316,7 +316,7 @@ static virStorageVolPtr vshCommandOptVolBy(vshControl *ctl, const vshCmd *cmd,
                            VSH_BYUUID|VSH_BYNAME)
 
 static virSecretPtr vshCommandOptSecret(vshControl *ctl, const vshCmd *cmd,
-                                        char **name);
+                                        const char **name);
 
 static void vshPrintExtra(vshControl *ctl, const char *format, ...)
     ATTRIBUTE_FMT_PRINTF(2, 3);
@@ -643,7 +643,7 @@ static int
 cmdAutostart(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
+    const char *name;
     int autostart;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -692,7 +692,7 @@ static int
 cmdConnect(vshControl *ctl, const vshCmd *cmd)
 {
     int ro = vshCommandOptBool(cmd, "readonly");
-    char *name;
+    const char *name;
 
     if (ctl->conn) {
         int ret;
@@ -964,7 +964,7 @@ static int
 cmdDomblkstat (vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name, *device;
+    const char *name, *device;
     struct _virDomainBlockStats stats;
 
     if (!vshConnectionUsability (ctl, ctl->conn))
@@ -1021,7 +1021,7 @@ static int
 cmdDomIfstat (vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name, *device;
+    const char *name, *device;
     struct _virDomainInterfaceStats stats;
 
     if (!vshConnectionUsability (ctl, ctl->conn))
@@ -1087,7 +1087,7 @@ static int
 cmdDomMemStat(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
+    const char *name;
     struct _virDomainMemoryStat stats[VIR_DOMAIN_MEMORY_STAT_NR];
     unsigned int nr_stats, i;
 
@@ -1188,7 +1188,7 @@ static int
 cmdSuspend(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
+    const char *name;
     int ret = TRUE;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -1230,7 +1230,7 @@ static int
 cmdCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -1288,7 +1288,7 @@ static int
 cmdDefine(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -1336,7 +1336,7 @@ cmdUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
     int ret = TRUE;
-    char *name;
+    const char *name;
     int found;
     int id;
 
@@ -1454,8 +1454,8 @@ static int
 cmdSave(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
-    char *to;
+    const char *name;
+    const char *to;
     int ret = TRUE;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -1499,7 +1499,7 @@ static int
 cmdManagedSave(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
+    const char *name;
     int ret = TRUE;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -1537,7 +1537,7 @@ static int
 cmdManagedSaveRemove(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
+    const char *name;
     int ret = FALSE;
     int hassave;
 
@@ -1595,7 +1595,7 @@ cmdSchedInfoUpdate(vshControl *ctl, const vshCmd *cmd,
                    virSchedParameterPtr param)
 {
     int found;
-    char *data;
+    const char *data;
 
     /* Legacy 'weight' parameter */
     if (STREQ(param->field, "weight") &&
@@ -1746,7 +1746,7 @@ cmdSchedinfo(vshControl *ctl, const vshCmd *cmd)
             /* See if we've tried to --set var=val.  If so, the fact that
                we reach this point (with update == 0) means that "var" did
                not match any of the settable parameters.  Report the error.  */
-            char *var_value_pair = vshCommandOptString(cmd, "set", NULL);
+            const char *var_value_pair = vshCommandOptString(cmd, "set", NULL);
             if (var_value_pair) {
                 vshError(ctl, _("invalid scheduler option: %s"),
                          var_value_pair);
@@ -1804,7 +1804,7 @@ static const vshCmdOptDef opts_restore[] = {
 static int
 cmdRestore(vshControl *ctl, const vshCmd *cmd)
 {
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
 
@@ -1845,8 +1845,8 @@ static int
 cmdDump(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *name;
-    char *to;
+    const char *name;
+    const char *to;
     int ret = TRUE;
     int flags = 0;
 
@@ -1894,7 +1894,7 @@ cmdResume(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -1932,7 +1932,7 @@ cmdShutdown(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -1970,7 +1970,7 @@ cmdReboot(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -2008,7 +2008,7 @@ cmdDestroy(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -2409,7 +2409,7 @@ static const vshCmdOptDef opts_maxvcpus[] = {
 static int
 cmdMaxvcpus(vshControl *ctl, const vshCmd *cmd)
 {
-    char *type;
+    const char *type;
     int vcpus;
 
     type = vshCommandOptString(cmd, "type", NULL);
@@ -2707,7 +2707,7 @@ cmdVcpupin(vshControl *ctl, const vshCmd *cmd)
     virDomainPtr dom;
     virNodeInfo nodeinfo;
     int vcpu;
-    char *cpulist;
+    const char *cpulist;
     int ret = TRUE;
     int vcpufound = 0;
     unsigned char *cpumap;
@@ -3290,8 +3290,8 @@ static int
 cmdDomXMLFromNative(vshControl *ctl, const vshCmd *cmd)
 {
     int ret = TRUE;
-    char *format;
-    char *configFile;
+    const char *format;
+    const char *configFile;
     char *configData;
     char *xmlData;
     int flags = 0;
@@ -3335,8 +3335,8 @@ static int
 cmdDomXMLToNative(vshControl *ctl, const vshCmd *cmd)
 {
     int ret = TRUE;
-    char *format;
-    char *xmlFile;
+    const char *format;
+    const char *xmlFile;
     char *configData;
     char *xmlData;
     int flags = 0;
@@ -3808,7 +3808,7 @@ static int
 cmdNetworkAutostart(vshControl *ctl, const vshCmd *cmd)
 {
     virNetworkPtr network;
-    char *name;
+    const char *name;
     int autostart;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -3855,7 +3855,7 @@ static int
 cmdNetworkCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virNetworkPtr network;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -3903,7 +3903,7 @@ static int
 cmdNetworkDefine(vshControl *ctl, const vshCmd *cmd)
 {
     virNetworkPtr network;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -3952,7 +3952,7 @@ cmdNetworkDestroy(vshControl *ctl, const vshCmd *cmd)
 {
     virNetworkPtr network;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -4383,7 +4383,7 @@ cmdNetworkUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virNetworkPtr network;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -4676,7 +4676,7 @@ static int
 cmdInterfaceDefine(vshControl *ctl, const vshCmd *cmd)
 {
     virInterfacePtr iface;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -4724,7 +4724,7 @@ cmdInterfaceUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virInterfacePtr iface;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -4762,7 +4762,7 @@ cmdInterfaceStart(vshControl *ctl, const vshCmd *cmd)
 {
     virInterfacePtr iface;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -4800,7 +4800,7 @@ cmdInterfaceDestroy(vshControl *ctl, const vshCmd *cmd)
 {
     virInterfacePtr iface;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -4838,7 +4838,7 @@ static int
 cmdNWFilterDefine(vshControl *ctl, const vshCmd *cmd)
 {
     virNWFilterPtr nwfilter;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -4887,7 +4887,7 @@ cmdNWFilterUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virNWFilterPtr nwfilter;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -5131,7 +5131,7 @@ static int
 cmdPoolAutostart(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
-    char *name;
+    const char *name;
     int autostart;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -5179,7 +5179,7 @@ static int
 cmdPoolCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -5231,7 +5231,7 @@ static int
 cmdNodeDeviceCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virNodeDevicePtr dev = NULL;
-    char *from;
+    const char *from;
     int found = 0;
     int ret = TRUE;
     char *buffer;
@@ -5285,7 +5285,7 @@ cmdNodeDeviceDestroy(vshControl *ctl, const vshCmd *cmd)
     virNodeDevicePtr dev = NULL;
     int ret = TRUE;
     int found = 0;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn)) {
         return FALSE;
@@ -5326,10 +5326,10 @@ static const vshCmdOptDef opts_pool_X_as[] = {
     {NULL, 0, 0, NULL}
 };
 
-static int buildPoolXML(const vshCmd *cmd, char **retname, char **xml) {
+static int buildPoolXML(const vshCmd *cmd, const char **retname, char **xml) {
 
     int found;
-    char *name, *type, *srcHost, *srcPath, *srcDev, *srcName, *srcFormat, *target;
+    const char *name, *type, *srcHost, *srcPath, *srcDev, *srcName, *srcFormat, *target;
     virBuffer buf = VIR_BUFFER_INITIALIZER;
 
     name = vshCommandOptString(cmd, "name", &found);
@@ -5398,7 +5398,8 @@ static int
 cmdPoolCreateAs(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
-    char *xml, *name;
+    const char *name;
+    char *xml;
     int printXML = vshCommandOptBool(cmd, "print-xml");
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -5444,7 +5445,7 @@ static int
 cmdPoolDefine(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -5487,7 +5488,8 @@ static int
 cmdPoolDefineAs(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
-    char *xml, *name;
+    const char *name;
+    char *xml;
     int printXML = vshCommandOptBool(cmd, "print-xml");
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -5534,7 +5536,7 @@ cmdPoolBuild(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -5574,7 +5576,7 @@ cmdPoolDestroy(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -5613,7 +5615,7 @@ cmdPoolDelete(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -5652,7 +5654,7 @@ cmdPoolRefresh(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -6141,10 +6143,10 @@ static const vshCmdOptDef opts_find_storage_pool_sources_as[] = {
 static int
 cmdPoolDiscoverSourcesAs(vshControl * ctl, const vshCmd * cmd ATTRIBUTE_UNUSED)
 {
-    char *type, *host;
+    const char *type, *host;
     char *srcSpec = NULL;
     char *srcList;
-    char *initiator;
+    const char *initiator;
     int found;
 
     type = vshCommandOptString(cmd, "type", &found);
@@ -6161,7 +6163,7 @@ cmdPoolDiscoverSourcesAs(vshControl * ctl, const vshCmd * cmd ATTRIBUTE_UNUSED)
         return FALSE;
 
     if (host) {
-        char *port = vshCommandOptString(cmd, "port", &found);
+        const char *port = vshCommandOptString(cmd, "port", &found);
         if (!found)
             port = NULL;
         virBuffer buf = VIR_BUFFER_INITIALIZER;
@@ -6216,8 +6218,8 @@ static const vshCmdOptDef opts_find_storage_pool_sources[] = {
 static int
 cmdPoolDiscoverSources(vshControl * ctl, const vshCmd * cmd ATTRIBUTE_UNUSED)
 {
-    char *type, *srcSpecFile, *srcList;
-    char *srcSpec = NULL;
+    const char *type, *srcSpecFile;
+    char *srcSpec = NULL, *srcList;
     int found;
 
     type = vshCommandOptString(cmd, "type", &found);
@@ -6468,8 +6470,8 @@ cmdVolCreateAs(vshControl *ctl, const vshCmd *cmd)
     virStorageVolPtr vol;
     int found;
     char *xml;
-    char *name, *capacityStr, *allocationStr, *format;
-    char *snapshotStrVol, *snapshotStrFormat;
+    const char *name, *capacityStr, *allocationStr, *format;
+    const char *snapshotStrVol, *snapshotStrFormat;
     unsigned long long capacity, allocation = 0;
     virBuffer buf = VIR_BUFFER_INITIALIZER;
 
@@ -6611,7 +6613,7 @@ cmdPoolUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -6688,7 +6690,7 @@ cmdVolCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool;
     virStorageVolPtr vol;
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -6749,7 +6751,7 @@ cmdVolCreateFrom(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr pool = NULL;
     virStorageVolPtr newvol = NULL, inputvol = NULL;
-    char *from;
+    const char *from;
     int found;
     int ret = FALSE;
     char *buffer = NULL;
@@ -6796,7 +6798,7 @@ cleanup:
 }
 
 static xmlChar *
-makeCloneXML(char *origxml, char *newname) {
+makeCloneXML(const char *origxml, const char *newname) {
 
     xmlDocPtr doc = NULL;
     xmlXPathContextPtr ctxt = NULL;
@@ -6848,7 +6850,8 @@ cmdVolClone(vshControl *ctl, const vshCmd *cmd)
 {
     virStoragePoolPtr origpool = NULL;
     virStorageVolPtr origvol = NULL, newvol = NULL;
-    char *name, *origxml = NULL;
+    const char *name;
+    char *origxml = NULL;
     xmlChar *newxml = NULL;
     int found;
     int ret = FALSE;
@@ -6924,7 +6927,7 @@ cmdVolDelete(vshControl *ctl, const vshCmd *cmd)
 {
     virStorageVolPtr vol;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -6965,7 +6968,7 @@ cmdVolWipe(vshControl *ctl, const vshCmd *cmd)
 {
     virStorageVolPtr vol;
     int ret = TRUE;
-    char *name;
+    const char *name;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -7502,7 +7505,7 @@ static int
 cmdVolPath(vshControl *ctl, const vshCmd *cmd)
 {
     virStorageVolPtr vol;
-    char *name = NULL;
+    const char *name = NULL;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -7534,7 +7537,8 @@ static const vshCmdOptDef opts_secret_define[] = {
 static int
 cmdSecretDefine(vshControl *ctl, const vshCmd *cmd)
 {
-    char *from, *buffer;
+    const char *from;
+    char *buffer;
     virSecretPtr res;
     char uuid[VIR_UUID_STRING_BUFLEN];
 
@@ -7625,7 +7629,8 @@ cmdSecretSetValue(vshControl *ctl, const vshCmd *cmd)
 {
     virSecretPtr secret;
     size_t value_size;
-    char *base64, *value;
+    const char *base64;
+    char *value;
     int found, res, ret = FALSE;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -7735,7 +7740,7 @@ cmdSecretUndefine(vshControl *ctl, const vshCmd *cmd)
 {
     virSecretPtr secret;
     int ret = FALSE;
-    char *uuid;
+    const char *uuid;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
         return FALSE;
@@ -8001,7 +8006,7 @@ cmdNodeListDevicesPrint(vshControl *ctl,
 static int
 cmdNodeListDevices (vshControl *ctl, const vshCmd *cmd ATTRIBUTE_UNUSED)
 {
-    char *cap;
+    const char *cap;
     char **devices;
     int found, num_devices, i;
     int tree = vshCommandOptBool(cmd, "tree");
@@ -8451,7 +8456,7 @@ static int
 cmdAttachDevice(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *from;
+    const char *from;
     char *buffer;
     int ret = TRUE;
     int found;
@@ -8518,7 +8523,7 @@ static int
 cmdDetachDevice(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *from;
+    const char *from;
     char *buffer;
     int ret = TRUE;
     int found;
@@ -8586,7 +8591,7 @@ static int
 cmdUpdateDevice(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom;
-    char *from;
+    const char *from;
     char *buffer;
     int ret = TRUE;
     int found;
@@ -8662,7 +8667,7 @@ static int
 cmdAttachInterface(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
-    char *mac, *target, *script, *type, *source, *model;
+    const char *mac, *target, *script, *type, *source, *model;
     int typ, ret = FALSE;
     unsigned int flags;
     virBuffer buf = VIR_BUFFER_INITIALIZER;
@@ -8772,7 +8777,8 @@ cmdDetachInterface(vshControl *ctl, const vshCmd *cmd)
     xmlXPathContextPtr ctxt = NULL;
     xmlNodePtr cur = NULL;
     xmlBufferPtr xml_buf = NULL;
-    char *doc, *mac =NULL, *type;
+    const char *mac =NULL, *type;
+    char *doc;
     char buf[64];
     int i = 0, diff_mac, ret = FALSE;
     unsigned int flags;
@@ -8911,10 +8917,10 @@ static int
 cmdAttachDisk(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
-    char *source, *target, *driver, *subdriver, *type, *mode;
+    const char *source, *target, *driver, *subdriver, *type, *mode;
     int isFile = 0, ret = FALSE;
     unsigned int flags;
-    char *stype;
+    const char *stype;
     virBuffer buf = VIR_BUFFER_INITIALIZER;
     char *xml;
 
@@ -9039,7 +9045,8 @@ cmdDetachDisk(vshControl *ctl, const vshCmd *cmd)
     xmlNodePtr cur = NULL;
     xmlBufferPtr xml_buf = NULL;
     virDomainPtr dom = NULL;
-    char *doc, *target;
+    const char *target;
+    char *doc;
     int i = 0, diff_tgt, ret = FALSE;
     unsigned int flags;
 
@@ -9156,7 +9163,7 @@ static const vshCmdOptDef opts_cpu_compare[] = {
 static int
 cmdCPUCompare(vshControl *ctl, const vshCmd *cmd)
 {
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -9220,7 +9227,7 @@ static const vshCmdOptDef opts_cpu_baseline[] = {
 static int
 cmdCPUBaseline(vshControl *ctl, const vshCmd *cmd)
 {
-    char *from;
+    const char *from;
     int found;
     int ret = TRUE;
     char *buffer;
@@ -9450,9 +9457,9 @@ static int
 cmdCd(vshControl *ctl, const vshCmd *cmd ATTRIBUTE_UNUSED)
 {
     const char *dir;
+    char *dir_malloced = NULL;
     int found;
     int ret = TRUE;
-    bool dir_malloced = false;
 
     if (!ctl->imode) {
         vshError(ctl, "%s", _("cd: command valid only in interactive mode"));
@@ -9462,8 +9469,7 @@ cmdCd(vshControl *ctl, const vshCmd *cmd ATTRIBUTE_UNUSED)
     dir = vshCommandOptString(cmd, "dir", &found);
     if (!found) {
         uid_t uid = geteuid();
-        dir = virGetUserDirectory(uid);
-        dir_malloced = !!dir;
+        dir = dir_malloced = virGetUserDirectory(uid);
     }
     if (!dir)
         dir = "/";
@@ -9473,8 +9479,7 @@ cmdCd(vshControl *ctl, const vshCmd *cmd ATTRIBUTE_UNUSED)
         ret = FALSE;
     }
 
-    if (dir_malloced)
-        VIR_FREE(dir);
+    VIR_FREE(dir_malloced);
     return ret;
 }
 
@@ -9763,7 +9768,7 @@ cmdSnapshotCreate(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
     int ret = FALSE;
-    char *from;
+    const char *from;
     char *buffer = NULL;
     virDomainSnapshotPtr snapshot = NULL;
     xmlDocPtr xml = NULL;
@@ -10036,7 +10041,7 @@ cmdSnapshotDumpXML(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
     int ret = FALSE;
-    char *name;
+    const char *name;
     virDomainSnapshotPtr snapshot = NULL;
     char *xml = NULL;
 
@@ -10093,7 +10098,7 @@ cmdDomainSnapshotRevert(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
     int ret = FALSE;
-    char *name;
+    const char *name;
     virDomainSnapshotPtr snapshot = NULL;
 
     if (!vshConnectionUsability(ctl, ctl->conn))
@@ -10146,7 +10151,7 @@ cmdSnapshotDelete(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
     int ret = FALSE;
-    char *name;
+    const char *name;
     virDomainSnapshotPtr snapshot = NULL;
     unsigned int flags = 0;
 
@@ -10203,7 +10208,7 @@ cmdQemuMonitorCommand(vshControl *ctl, const vshCmd *cmd)
 {
     virDomainPtr dom = NULL;
     int ret = FALSE;
-    char *monitor_cmd;
+    const char *monitor_cmd;
     char *result = NULL;
     unsigned int flags = 0;
 
@@ -10774,7 +10779,7 @@ vshCommandOptUL(const vshCmd *cmd, const char *name, int *found)
 /*
  * Returns option as STRING
  */
-static char *
+static const char *
 vshCommandOptString(const vshCmd *cmd, const char *name, int *found)
 {
     vshCmdOpt *arg = vshCommandOpt(cmd, name);
@@ -10864,10 +10869,10 @@ cmd_has_option (vshControl *ctl, const vshCmd *cmd, const char *optname)
 
 static virDomainPtr
 vshCommandOptDomainBy(vshControl *ctl, const vshCmd *cmd,
-                      char **name, int flag)
+                      const char **name, int flag)
 {
     virDomainPtr dom = NULL;
-    char *n;
+    const char *n;
     int id;
     const char *optname = "domain";
     if (!cmd_has_option (ctl, cmd, optname))
@@ -10911,10 +10916,10 @@ vshCommandOptDomainBy(vshControl *ctl, const vshCmd *cmd,
 
 static virNetworkPtr
 vshCommandOptNetworkBy(vshControl *ctl, const vshCmd *cmd,
-                       char **name, int flag)
+                       const char **name, int flag)
 {
     virNetworkPtr network = NULL;
-    char *n;
+    const char *n;
     const char *optname = "network";
     if (!cmd_has_option (ctl, cmd, optname))
         return NULL;
@@ -10950,10 +10955,10 @@ vshCommandOptNetworkBy(vshControl *ctl, const vshCmd *cmd,
 
 static virNWFilterPtr
 vshCommandOptNWFilterBy(vshControl *ctl, const vshCmd *cmd,
-                        char **name, int flag)
+                        const char **name, int flag)
 {
     virNWFilterPtr nwfilter = NULL;
-    char *n;
+    const char *n;
     const char *optname = "nwfilter";
     if (!cmd_has_option (ctl, cmd, optname))
         return NULL;
@@ -10988,10 +10993,10 @@ vshCommandOptNWFilterBy(vshControl *ctl, const vshCmd *cmd,
 
 static virInterfacePtr
 vshCommandOptInterfaceBy(vshControl *ctl, const vshCmd *cmd,
-                         char **name, int flag)
+                         const char **name, int flag)
 {
     virInterfacePtr iface = NULL;
-    char *n;
+    const char *n;
     const char *optname = "interface";
     if (!cmd_has_option (ctl, cmd, optname))
         return NULL;
@@ -11026,10 +11031,10 @@ vshCommandOptInterfaceBy(vshControl *ctl, const vshCmd *cmd,
 
 static virStoragePoolPtr
 vshCommandOptPoolBy(vshControl *ctl, const vshCmd *cmd, const char *optname,
-                    char **name, int flag)
+                    const char **name, int flag)
 {
     virStoragePoolPtr pool = NULL;
-    char *n;
+    const char *n;
 
     if (!(n = vshCommandOptString(cmd, optname, NULL)))
         return NULL;
@@ -11063,11 +11068,11 @@ static virStorageVolPtr
 vshCommandOptVolBy(vshControl *ctl, const vshCmd *cmd,
                    const char *optname,
                    const char *pooloptname,
-                   char **name, int flag)
+                   const char **name, int flag)
 {
     virStorageVolPtr vol = NULL;
     virStoragePoolPtr pool = NULL;
-    char *n, *p;
+    const char *n, *p;
     int found;
 
     if (!(n = vshCommandOptString(cmd, optname, NULL)))
@@ -11114,10 +11119,10 @@ vshCommandOptVolBy(vshControl *ctl, const vshCmd *cmd,
 }
 
 static virSecretPtr
-vshCommandOptSecret(vshControl *ctl, const vshCmd *cmd, char **name)
+vshCommandOptSecret(vshControl *ctl, const vshCmd *cmd, const char **name)
 {
     virSecretPtr secret = NULL;
-    char *n;
+    const char *n;
     const char *optname = "secret";
 
     if (!cmd_has_option (ctl, cmd, optname))
-- 
1.7.4.1

