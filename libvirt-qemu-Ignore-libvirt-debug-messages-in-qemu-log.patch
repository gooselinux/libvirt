From 07890b256bd751bbecbc09359fd7eca1c85e1722 Mon Sep 17 00:00:00 2001
Message-Id: <07890b256bd751bbecbc09359fd7eca1c85e1722.1302097026.git.jdenemar@redhat.com>
From: Jiri Denemark <jdenemar@redhat.com>
Date: Fri, 1 Apr 2011 09:36:05 +0200
Subject: [PATCH] qemu: Ignore libvirt debug messages in qemu log

https://bugzilla.redhat.com/show_bug.cgi?id=681492

qemu driver uses a 4K buffer for reading qemu log file. This is enough
when only qemu's output is present in the log file. However, when
debugging messages are turned on, intermediate libvirt process fills the
log with a bunch of debugging messages before it executes qemu binary.
In such a case the buffer may become too small. However, we are not
really interested in libvirt messages so they can be filtered out from
the buffer.
(cherry picked from commit 72ab0b6dc8129a388aff260a6e444d48495b0e93)

Conflicts:

	src/qemu/qemu_process.c - qemudReadLogOutput() was renamed
        qemuProcessReadLogOutput() upstream and moved from qemu_driver.c
        to qemu_process.c
---
 src/qemu/qemu_driver.c |   50 ++++++++++++++++++++++++++++++++++++++---------
 src/util/logging.c     |    8 +++++++
 2 files changed, 48 insertions(+), 10 deletions(-)

diff --git a/src/qemu/qemu_driver.c b/src/qemu/qemu_driver.c
index 250a8be..5a4777d 100644
--- a/src/qemu/qemu_driver.c
+++ b/src/qemu/qemu_driver.c
@@ -2009,11 +2009,23 @@ qemudReadLogOutput(virDomainObjPtr vm,
 {
     int retries = (timeout*10);
     int got = 0;
+    char *debug = NULL;
+    int ret = -1;
+    char *filter_next = buf;
+
     buf[0] = '\0';
 
+    /* This relies on log message format generated by virLogFormatString() and
+     * might need to be modified when message format changes. */
+    if (virAsprintf(&debug, ": %d: debug : ", vm->pid) < 0) {
+        virReportOOMError();
+        return -1;
+    }
+
     while (retries) {
-        ssize_t func_ret, ret;
+        ssize_t func_ret, bytes;
         int isdead = 0;
+        char *eol;
 
         func_ret = func(vm, buf, fd);
 
@@ -2022,32 +2034,47 @@ qemudReadLogOutput(virDomainObjPtr vm,
 
         /* Any failures should be detected before we read the log, so we
          * always have something useful to report on failure. */
-        ret = saferead(fd, buf+got, buflen-got-1);
-        if (ret < 0) {
+        bytes = saferead(fd, buf+got, buflen-got-1);
+        if (bytes < 0) {
             virReportSystemError(errno,
                                  _("Failure while reading %s log output"),
                                  what);
-            return -1;
+            goto cleanup;
         }
 
-        got += ret;
+        got += bytes;
         buf[got] = '\0';
+
+        /* Filter out debug messages from intermediate libvirt process */
+        while ((eol = strchr(filter_next, '\n'))) {
+            *eol = '\0';
+            if (strstr(filter_next, debug)) {
+                memmove(filter_next, eol + 1, got - (eol - buf));
+                got -= eol + 1 - filter_next;
+            } else {
+                filter_next = eol + 1;
+                *eol = '\n';
+            }
+        }
+
         if (got == buflen-1) {
             qemuReportError(VIR_ERR_INTERNAL_ERROR,
                             _("Out of space while reading %s log output: %s"),
                             what, buf);
-            return -1;
+            goto cleanup;
         }
 
         if (isdead) {
             qemuReportError(VIR_ERR_INTERNAL_ERROR,
                             _("Process exited while reading %s log output: %s"),
                             what, buf);
-            return -1;
+            goto cleanup;
         }
 
-        if (func_ret <= 0)
-            return func_ret;
+        if (func_ret <= 0) {
+            ret = func_ret;
+            goto cleanup;
+        }
 
         usleep(100*1000);
         retries--;
@@ -2056,7 +2083,10 @@ qemudReadLogOutput(virDomainObjPtr vm,
     qemuReportError(VIR_ERR_INTERNAL_ERROR,
                     _("Timed out while reading %s log output: %s"),
                     what, buf);
-    return -1;
+
+cleanup:
+    VIR_FREE(debug);
+    return ret;
 }
 
 
diff --git a/src/util/logging.c b/src/util/logging.c
index 94ab82c..c3245de 100644
--- a/src/util/logging.c
+++ b/src/util/logging.c
@@ -513,6 +513,14 @@ virLogFormatString(char **msg,
                    const char *str)
 {
     int ret;
+
+    /*
+     * Be careful when changing the following log message formatting, we rely
+     * on it when stripping libvirt debug messages from qemu log files. So when
+     * changing this, you might also need to change the code there.
+     * virLogFormatString() function name is mentioned there so it's sufficient
+     * to just grep for it to find the right place.
+     */
     if ((funcname != NULL)) {
         ret = virAsprintf(msg, "%02d:%02d:%02d.%03d: %d: %s : %s:%lld : %s\n",
                           time_info->tm_hour, time_info->tm_min,
-- 
1.7.4.1

