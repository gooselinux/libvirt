From ffa9ca5a891ced0121c40f03bf4b1855114f321b Mon Sep 17 00:00:00 2001
Message-Id: <ffa9ca5a891ced0121c40f03bf4b1855114f321b.1296065735.git.jdenemar@redhat.com>
From: Eric Blake <eblake@redhat.com>
Date: Mon, 13 Dec 2010 17:28:45 -0700
Subject: [PATCH] selinux: avoid memory overhead of matchpathcon

https://bugzilla.redhat.com/show_bug.cgi?id=672554

Needed as a follow-up to
https://bugzilla.redhat.com/show_bug.cgi?id=656795 to avoid the worst
of the libselinux leaks triggered by libvirtd, while we wait for
https://bugzilla.redhat.com/show_bug.cgi?id=658571 to be backported
for libselinux.

* src/security/security_selinux.c
(SELinuxRestoreSecurityFileLabel): Use selabel_lookup instead of
matchpathcon.
Suggested by Daniel Walsh.
(cherry picked from commit 6679943f9419483d119b9be2fcc166c381fa6cbc)
---
 src/security/security_selinux.c |   12 ++++++++----
 1 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/security/security_selinux.c b/src/security/security_selinux.c
index 97c1ceb..0bc7c49 100644
--- a/src/security/security_selinux.c
+++ b/src/security/security_selinux.c
@@ -14,6 +14,7 @@
  */
 #include <config.h>
 #include <selinux/selinux.h>
+#include <selinux/label.h>
 #include <selinux/context.h>
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -361,6 +362,7 @@ SELinuxRestoreSecurityFileLabel(const char *path)
 {
     struct stat buf;
     security_context_t fcon = NULL;
+    struct selabel_handle *handle = NULL;
     int rc = -1;
     char *newpath = NULL;
     char ebuf[1024];
@@ -379,14 +381,16 @@ SELinuxRestoreSecurityFileLabel(const char *path)
         goto err;
     }
 
-    if (matchpathcon(newpath, buf.st_mode, &fcon) == 0)  {
-        rc = SELinuxSetFilecon(newpath, fcon);
+    if ((handle = selabel_open(SELABEL_CTX_FILE, NULL, 0)) == NULL ||
+        selabel_lookup(handle, &fcon, newpath, buf.st_mode) < 0) {
+        VIR_WARN("cannot lookup default selinux label for %s", newpath);
     } else {
-        VIR_WARN("cannot lookup default selinux label for %s",
-                 newpath);
+        rc = SELinuxSetFilecon(newpath, fcon);
     }
 
 err:
+    if (handle)
+        selabel_close(handle);
     freecon(fcon);
     VIR_FREE(newpath);
     return rc;
-- 
1.7.4.rc3

