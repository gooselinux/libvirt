From d4c810429bdd73a8953f2314ce9199f3781681b5 Mon Sep 17 00:00:00 2001
Message-Id: <d4c810429bdd73a8953f2314ce9199f3781681b5.1303134272.git.jdenemar@redhat.com>
From: Jiri Denemark <jdenemar@redhat.com>
Date: Tue, 12 Apr 2011 17:58:22 +0200
Subject: [PATCH] util: Fix crash when removing entries during hash iteration

https://bugzilla.redhat.com/show_bug.cgi?id=693385

Commit 9677cd33eea4c65d78ba463b46b8b45ed2da1709 made it possible to
remove current entry when iterating through all hash entries. However,
it didn't properly handle a special case of removing first entry
assigned to a given key which contains several entries in its collision
list.
(cherry picked from commit 5c53160a2f7c64ce94a3bc1e964ab71ffb2e2c23)

Conflicts:

	src/util/hash.c - context (RHEL-6 does not contain commit
        fba550f65147d36d9c878fc13e9fb5770d250e07)
---
 src/util/hash.c |    8 ++++++++
 1 files changed, 8 insertions(+), 0 deletions(-)

diff --git a/src/util/hash.c b/src/util/hash.c
index bb37146..d6eb6d9 100644
--- a/src/util/hash.c
+++ b/src/util/hash.c
@@ -492,8 +492,16 @@ int virHashForEach(virHashTablePtr table, virHashIterator iter, void *data) {
         while (entry) {
             virHashEntryPtr next = entry->next;
             if (entry->valid) {
+                void *name = (entry == table->table + i) ? entry->name : NULL;
+
                 iter(entry->payload, entry->name, data);
                 count++;
+
+                /* revisit current entry if it was the first one in collision
+                 * list and its content changed, i.e. it was deleted by iter()
+                 */
+                if (name && name != entry->name)
+                    continue;
             }
             entry = next;
         }
-- 
1.7.5.rc1

